apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust
  labels:
    app: locust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust
  template:
    metadata:
      labels:
        app: locust
    spec:
      containers:
        - name: locust
          image: locustio/locust:2.32.0
          ports:
            - containerPort: 8089
          env:
            - name: LOCUST_LOCUSTFILE
            #  value: /mnt/locust/locustfile.py #valor sustituido por un secret
              valueFrom:
                secretKeyRef:
                  name: locust-secret
                  key: LOCUST_LOCUSTFILE
            - name: LOCUST_HOST
            #  value: http://app-gallery-service:80 #valor sustituido por un secret
              valueFrom:
                secretKeyRef:
                  name: locust-secret
                  key: LOCUST_HOST
          volumeMounts:
            - name: locustfile-volume
              mountPath: /mnt/locust
      volumes:
        - name: locustfile-volume
          configMap:
            name: locustfile
---
apiVersion: v1
kind: Service
metadata:
  name: locust-svc
  labels:
    app: locust
spec:
  selector:
    app: locust
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 8089
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: locustfile
data:
  locustfile.py: |-
    from locust import HttpUser, task, between

    class MyUser(HttpUser):
      wait_time = between(5, 15)

      @task(4)
      def index(self):
        self.client.get("/")
---
apiVersion: v1
kind: Secret
metadata:
  name: locust-secret
type: Opaque
data:
  LOCUST_LOCUSTFILE: L21udC9sb2N1c3QvbG9jdXN0ZmlsZS5weQ==
  LOCUST_HOST: aHR0cDovL2FwcC1nYWxsZXJ5LXNlcnZpY2U6ODA=